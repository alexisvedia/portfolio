/* Estilos para el Masonry Grid (iguales a XCons) */
.masonry-grid-container {
  /* padding: 5px; */ /* Eliminado, el MasonryWrapper lo maneja */
}

.masonry-grid {
  position: relative;
}

.masonry-grid > .masonry-item {
  position: absolute;
  will-change: transform, width, height, opacity;
  padding: 10px; 
  box-sizing: border-box;
}

.masonry-grid > .masonry-item > * { 
  position: relative;
  display: block; /* Asegurar que la imagen/video sea un bloque */
  width: 100%;
  height: 100%;
  object-fit: cover; 
  border-radius: 8px; /* Reducido de 10px para consistencia con otros redondeos */
  box-shadow: 0px 8px 20px -8px rgba(0, 0, 0, 0.15);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  cursor: pointer;
  overflow: hidden; 
}

.masonry-grid > .masonry-item:hover > * {
  transform: scale(1.03);
  box-shadow: 0px 12px 30px -10px rgba(0, 0, 0, 0.25);
}

/* --- Estilos del Modal (Revisión detallada basada en XCons) --- */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.85);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10000; 
  padding: 20px;
  overflow-y: auto;
}

.modal-content-wrapper {
  position: relative;
  background-color: #fff; 
  border-radius: 10px;
  max-width: 1200px; 
  width: 90vw; 
  max-height: 90vh; 
  display: flex;
  flex-direction: row;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}

.modal-media-area {
  flex: 2;
  padding: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
  height: 85vh; /* De XCons */
  min-height: 450px; /* De XCons */
  /* background-color: #f0f0f0; */ /* XCons no lo tiene en modo claro, se elimina */
}

.modal-media-area img,
.modal-media-area video {
  max-width: 100%;
  max-height: 100%; 
  display: block;
  border-radius: 6px;
  object-fit: contain;
}

.modal-info-area {
  flex: 1;
  padding: 25px;
  padding-right: 30px; /* Reducido de 70px de XCons, ajustable */
  overflow-y: auto;
  background-color: #f9f9f9; 
  border-left: 1px solid #eee; 
  max-width: 380px; 
  min-width: 300px; 
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Estilos para h2 y p dentro de modal-info-area (referencia XCons) */
/* ModalInfoTitle (h2) es styled-component, sus props deben coincidir:
   font-family: 'Inter', sans-serif;
   font-weight: 500;
   font-size: 1.6em; (ModalInfoTitle usa 1.2rem, se podría ajustar si es necesario)
   color: #333; (light) / #ddd (dark) (ModalInfoTitle lo maneja)
   margin-bottom: 15px; (ModalInfoTitle usa 0.75rem = 12px)
*/

.modal-description { /* p */
  font-family: 'Inter', sans-serif; /* Asegurar consistencia de fuente */
  font-size: 0.95em; /* De XCons */
  line-height: 1.6; /* De XCons */
  color: #555; /* De XCons, para modo claro */
  white-space: pre-wrap;
  margin-bottom: 1rem; /* Ajustado de 0.5rem de XCons a 1rem */
}

.modal-close-button {
  position: absolute;
  top: 15px; 
  right: 15px; 
  background: rgba(0, 0, 0, 0.6); 
  color: white;
  border: none;
  border-radius: 50%;
  width: 35px; 
  height: 35px; 
  font-size: 22px; 
  line-height: 35px; 
  text-align: center;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
  z-index: 1020; 
}

.modal-close-button:hover {
  background: rgba(0, 0, 0, 0.8); 
  transform: scale(1.1); 
}

.modal-nav-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 44px; 
  height: 44px; 
  border-radius: 50%;
  background-color: rgba(40, 40, 40, 0.3); 
  backdrop-filter: blur(10px); 
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1); 
  color: white;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 1010; 
  transition: background-color 0.2s ease, opacity 0.2s ease, transform 0.2s ease;
  user-select: none;
  -webkit-user-select: none;
  opacity: 0.85; 
}

.modal-nav-button svg { 
  display: block;
  width: 24px;
  height: 24px;
}

.modal-nav-button:hover:not(:disabled) {
  background-color: rgba(50, 50, 50, 0.5); 
  opacity: 1;
  transform: translateY(-50%) scale(1.05); 
}

.modal-nav-button:disabled {
  opacity: 0.3; 
  cursor: not-allowed;
}

.modal-nav-button.prev {
  left: 15px; 
}

.modal-nav-button.next {
  right: 15px; 
}

/* --- Dark Mode para el Modal (Revisión detallada basada en XCons) --- */
.modal-overlay.dark-mode .modal-content-wrapper {
  background-color: #1e1e1e; 
  border: 1px solid #383838; /* Borde XCons .dark-mode .modal-content-wrapper */
}

.modal-overlay.dark-mode .modal-media-area {
  background-color: #111111; 
}

.modal-overlay.dark-mode .modal-info-area {
  background-color: #2a2a2a; 
  border-left: 1px solid #383838; 
}

.modal-overlay.dark-mode .modal-description { /* p */
  color: #bbb; /* De XCons .dark-mode p */
}

/* Colores de ModalInfoTitle (h2) y otros textos (links, etc.) se manejan en styled-components */

.modal-overlay.dark-mode .modal-close-button {
  background: rgba(255, 255, 255, 0.1); /* De XCons .dark-mode */
  color: #f0f0f0;
}

.modal-overlay.dark-mode .modal-close-button:hover {
  background: rgba(255, 255, 255, 0.2); /* De XCons .dark-mode */
}

.modal-overlay.dark-mode .modal-nav-button {
  background-color: rgba(50, 50, 50, 0.3); /* De XCons .dark-mode */
  border: 1px solid rgba(255, 255, 255, 0.15); /* De XCons .dark-mode */
  color: #f0f0f0;
}

.modal-overlay.dark-mode .modal-nav-button:hover:not(:disabled) {
  background-color: rgba(70, 70, 70, 0.5); /* De XCons .dark-mode */
}

/* --- Responsive (Revisión detallada basada en XCons) --- */
@media (max-width: 992px) { 
  .modal-content-wrapper {
    flex-direction: column; 
    width: 95vw;
    max-height: 95vh;
  }

  .modal-media-area {
    flex: none; 
    height: auto; /* De XCons responsive */
    min-height: 300px; /* De XCons responsive */
    padding: 15px; /* De XCons responsive */
    border-bottom: 1px solid #ddd; 
  }

  .modal-overlay.dark-mode .modal-media-area {
    border-bottom: 1px solid #383838; 
  }

  .modal-info-area {
    flex: none;
    max-width: 100%; /* De XCons responsive */
    min-width: 0; /* De XCons responsive */
    border-left: none;
    padding: 20px; 
    height: auto; /* De XCons responsive */
    max-height: none; /* De XCons responsive, permite que el contenido defina la altura */
    overflow-y: auto; /* Asegurar scroll si el contenido es largo */
  }

  .modal-nav-button {
    width: 40px;
    height: 40px;
  }
  .modal-nav-button.prev {
    left: 10px;
  }
  .modal-nav-button.next {
    right: 10px;
  }
}

@media (max-width: 767px) { 
  .modal-overlay {
    padding: 10px; 
  }

  .modal-content-wrapper {
    width: calc(100vw - 20px); 
    max-height: calc(100vh - 20px);
  }
}

body.modal-open {
  overflow: hidden;
}

body.modal-open .chatbot-assistant,
body.modal-open .ai-portfolio-assistant-container { 
  display: none !important; 
}

/* Estilo para el masonry grid y sus items */
.masonry-grid {
  position: relative;
  /* width: 100%; No es necesario si el contenedor padre lo define */
}

.masonry-item {
  position: absolute;
  will-change: transform, width, height, opacity;
  /* padding: 10px; El padding se puede manejar dentro del item o quitar si el contenido lo maneja */
  box-sizing: border-box; /* Importante si se añade padding o borde al item */
}

.masonry-item > * { /* El hijo directo, que sería la imagen */
  display: block; /* Asegurar que la imagen sea un bloque */
  width: 100%;
  height: 100%;
  object-fit: cover; /* La imagen cubre el área sin distorsionarse */
  border-radius: 8px; /* Bordes redondeados para la imagen */
  box-shadow: 0px 8px 20px -8px rgba(0, 0, 0, 0.15);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  cursor: pointer;
  overflow: hidden; /* Por si acaso, aunque object-fit debería manejarlo */
}

.masonry-item:hover > * {
  transform: scale(1.03);
  box-shadow: 0px 12px 30px -10px rgba(0, 0, 0, 0.25);
}

/* Para asegurar que el padding entre items no colapse visualmente con el contenedor externo */
.masonry-grid-container {
    padding: 5px; /* Un pequeño padding alrededor de toda la grilla */
}

/* Si los items tienen un padding, por ejemplo 10px como en el original:
.masonry-item {
    padding: 10px;
}
Entonces, la imagen dentro sería así para llenar el item menos el padding:
.masonry-item img {
    width: calc(100% - 20px); 
    height: calc(100% - 20px); 
    margin: 10px;
}
Pero es más simple aplicar el padding/gap directamente en cómo se calculan las posiciones y tamaños
o usar un gap en CSS Grid/Flex si la librería lo permite internamente, o no usar padding en el item
y dejar que el contenido (imagen) llene el item completamente con su propio border-radius.
Elegí la opción de que la imagen llene el .masonry-item y tenga su propio estilo.
*/ 